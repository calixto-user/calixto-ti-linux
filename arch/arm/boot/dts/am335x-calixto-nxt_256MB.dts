/*
 * Copyright (C) 2020 Calixto Systems Pvt Ltd - http://www.calixto.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/*
 * AM335x CALIXTO STAMP EVM
 * http:// http://www.calixto.co.in/
 * Modified from am335x-evmsk
 * Modified by Vipin Vijayan <vipin.v@calixto.in>
 */

/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "CALIXTO-AM335X-NXT";
	compatible = "ti,am335x-calixto-nxt", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&vdd_mpu_supply>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256MB */
	};

	vmmcsd_fixed: fixedregulator@1 {
                compatible = "regulator-fixed";
                regulator-name = "vmmcsd-regulator";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                enable-active-high;
                regulator-always-on;
        };

        vdd_mpu_supply: fixedregulator@2 {
                compatible = "regulator-fixed";
                regulator-name = "vdd-mpu-regulator";
                regulator-min-microvolt = <1262000>;
                regulator-max-microvolt = <1262000>;
                regulator-boot-on;
                regulator-always-on;
        };

	core_audio_supply: fixedregulator-audiocore {
                compatible = "regulator-fixed";
                regulator-name = "core_audio_supply";
                regulator-min-microvolt = <3300000>;
                regulator-max-microvolt = <3300000>;
                regulator-boot-on;
        };

        io_audio_supply: fixedregulator-audioio {
                compatible = "regulator-fixed";
                regulator-name = "io_audio_supply";
                regulator-min-microvolt = <1800000>;
                regulator-max-microvolt = <1800000>;
                regulator-boot-on;
        };

	panel {
                compatible = "ti,tilcdc,panel";
                pinctrl-names = "default", "sleep";
                pinctrl-0 = <&lcd_pins_default>;
                pinctrl-1 = <&lcd_pins_sleep>;
                status = "okay";
                panel-info {
                        ac-bias           = <255>;
                        ac-bias-intrpt    = <0>;
                        dma-burst-sz      = <16>;
                        bpp               = <16>;
                        fdd               = <0x80>;
                        sync-edge         = <0>;
                        sync-ctrl         = <1>;
                        raster-order      = <0>;
                        fifo-th           = <0>;
                };
                display-timings {
                        480x272 {
                          hactive         = <480>;
                          vactive         = <272>;
                          hback-porch     = <2>;
                          hfront-porch    = <2>;
                          hsync-len       = <41>;
                          vback-porch     = <2>;
                          vfront-porch    = <12>;
                          vsync-len       = <10>;
                          clock-frequency = <9000000>;
                          hsync-active    = <0>;
                          vsync-active    = <0>;
			};
                };
        };

	sound {
            compatible = "ti,da830-evm-audio";
            ti,model = "CALIXTO-AM335X-NXT";
            ti,audio-codec = <&tlv320aic3106>;
            ti,mcasp-controller = <&mcasp0>;
            ti,codec-clock-rate = <24576000>;
            ti,audio-routing =
                    "Headphone Jack",       "HPLOUT",
                    "Headphone Jack",       "HPROUT",
                    "Line Out",             "LLOUT",
                    "Line Out",             "RLOUT",
                    "LINE1L",               "Line In",
                    "LINE1R",               "Line In",
                    "MIC3L",                "Mic Jack",
                    "MIC3R",                "Mic Jack";
        };

	leds {
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&user_leds_default>;
		pinctrl-1 = <&user_leds_sleep>;

		compatible = "gpio-leds";

		led@1 {
			label = "led1";
			gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "on";
		};

		led@2 {
			label = "led2";
			gpios = <&gpio3 18 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "on";
		};
	};

	gpio_buttons: gpio_buttons@0 {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&gpio_keys_s0>;
		#address-cells = <1>;
		#size-cells = <0>;

		switch@1 {
			label = "button0";
			linux,code = <0x100>;
			gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>;
		};
	};

};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&clkout2_pin>;

	user_leds_default: user_leds_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x99C, PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* mcasp0_ahclkr.gpio3_17 */
			AM33XX_IOPAD(0x9A0, PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* mcasp0_aclkr.gpio3_18 */
		>;
	};

	user_leds_sleep: user_leds_sleep {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x99C, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* mcasp0_ahclkr.gpio3_17 */
			AM33XX_IOPAD(0x9A0, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* mcasp0_aclkr.gpio3_18 */
		>;
	};

	gpio_keys_s0: gpio_keys_s0 {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9A4, PIN_INPUT_PULLDOWN | MUX_MODE7 ) /* mcasp0_fsr.gpio3_19 */
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x970, PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			AM33XX_IOPAD(0x974, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};
	
        i2c0_pins: pinmux_i2c0_pins {
               pinctrl-single,pins = <
                       AM33XX_IOPAD(0x988, PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_sda.i2c0_sda */
                       AM33XX_IOPAD(0x98c, PIN_INPUT_PULLUP | MUX_MODE0)    /* i2c0_scl.i2c0_scl */
               >;
        };

        uart4_pins: pinmux_uart4_pins {
               pinctrl-single,pins = <
                       AM33XX_IOPAD(0x968, PIN_INPUT_PULLUP    | MUX_MODE1)  /* uart0_ctsn.uart4_rxd */
                       AM33XX_IOPAD(0x96C, PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* uart0_rtsn.uart4_txd */
               >;
        };

        uart3_pins: pinmux_uart3_pins {
               pinctrl-single,pins = <
                       AM33XX_IOPAD(0x960, PIN_INPUT_PULLUP    | MUX_MODE1)  /* spi0_cs1.uart3_rxd  */
                       AM33XX_IOPAD(0x938, PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_rxd2.uart3_txd */
               >;
        };

        clkout2_pin: pinmux_clkout2_pin {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x9b4, PIN_OUTPUT_PULLDOWN | MUX_MODE3) /* xdma_event_intr1.clkout2 */
                >;
        };

        mmc1_pins_default: pinmux_mmc1_pins {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x8F0, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat3.mmc0_dat3 */
                        AM33XX_IOPAD(0x8F4, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat2.mmc0_dat2 */
                        AM33XX_IOPAD(0x8F8, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat1.mmc0_dat1 */
                        AM33XX_IOPAD(0x8FC, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat0.mmc0_dat0 */
                        AM33XX_IOPAD(0x900, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_clk.mmc0_clk */
                        AM33XX_IOPAD(0x904, PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_cmd.mmc0_cmd */
                        AM33XX_IOPAD(0x990, PIN_INPUT | MUX_MODE7)           /* mcasp0_aclkx.gpio3_14 */
                >;
        };

	mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x8F0, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x8F4, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x8F8, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x8FC, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x900, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x904, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x990, PIN_INPUT | MUX_MODE7)
                >;
        };

	emmc_pins: pinmux_emmc_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x88C, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_clk.mmc2_clk */
			AM33XX_IOPAD(0x888, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_csn3.mmc2_cmd */
			AM33XX_IOPAD(0x830, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad12.mmc2_dat0 */
			AM33XX_IOPAD(0x834, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad13.mmc2_dat1 */
			AM33XX_IOPAD(0x838, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad14.mmc2_dat2 */
			AM33XX_IOPAD(0x83C, PIN_INPUT_PULLUP | MUX_MODE3) /* gpmc_ad15.mmc2_dat3 */
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			AM33XX_IOPAD(0x90c, PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_crs.rmii1_crs_dv */
			AM33XX_IOPAD(0x910, PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxerr.mii1_rxerr */
			AM33XX_IOPAD(0x914, PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txen.mii1_txen   */
			AM33XX_IOPAD(0x924, PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txd1.mii1_txd1   */
			AM33XX_IOPAD(0x928, PIN_OUTPUT_PULLDOWN | MUX_MODE1)  /* mii1_txd0.mii1_txd0   */
			AM33XX_IOPAD(0x93c, PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxd1.mii1_rxd2   */
			AM33XX_IOPAD(0x940, PIN_INPUT_PULLDOWN  | MUX_MODE1)  /* mii1_rxd0.mii1_rxd0   */
			AM33XX_IOPAD(0x944, PIN_INPUT_PULLDOWN  | MUX_MODE0)  /* rmii1_refclk.rmii1_refclk */
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			AM33XX_IOPAD(0x90c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x910, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x914, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x924, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x928, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x93c, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x940, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x944, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLUP  | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			AM33XX_IOPAD(0x94c, PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM33XX_IOPAD(0x94c, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	lcd_pins_default: lcd_pins_default {
                pinctrl-single,pins = <
			AM33XX_IOPAD(0x8a0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8a4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8a8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8ac, PIN_OUTPUT | MUX_MODE0)	/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8b0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8b4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8b8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8bc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8c0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8c4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8c8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8cc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8d0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8d4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8d8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8dc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x8e0, PIN_OUTPUT | MUX_MODE0)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8e4, PIN_OUTPUT | MUX_MODE0)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8e8, PIN_OUTPUT | MUX_MODE0)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8ec, PIN_OUTPUT | MUX_MODE0)	/* lcd_ac_bias_en.lcd_ac_bias_en */
                >;
         };

	 lcd_pins_sleep: lcd_pins_sleep {
                pinctrl-single,pins = <
			AM33XX_IOPAD(0x8a0, PULL_DISABLE | MUX_MODE7)	/* lcd_data0.lcd_data0 */
			AM33XX_IOPAD(0x8a4, PULL_DISABLE | MUX_MODE7)	/* lcd_data1.lcd_data1 */
			AM33XX_IOPAD(0x8a8, PULL_DISABLE | MUX_MODE7)	/* lcd_data2.lcd_data2 */
			AM33XX_IOPAD(0x8ac, PULL_DISABLE | MUX_MODE7)	/* lcd_data3.lcd_data3 */
			AM33XX_IOPAD(0x8b0, PULL_DISABLE | MUX_MODE7)	/* lcd_data4.lcd_data4 */
			AM33XX_IOPAD(0x8b4, PULL_DISABLE | MUX_MODE7)	/* lcd_data5.lcd_data5 */
			AM33XX_IOPAD(0x8b8, PULL_DISABLE | MUX_MODE7)	/* lcd_data6.lcd_data6 */
			AM33XX_IOPAD(0x8bc, PULL_DISABLE | MUX_MODE7)	/* lcd_data7.lcd_data7 */
			AM33XX_IOPAD(0x8c0, PULL_DISABLE | MUX_MODE7)	/* lcd_data8.lcd_data8 */
			AM33XX_IOPAD(0x8c4, PULL_DISABLE | MUX_MODE7)	/* lcd_data9.lcd_data9 */
			AM33XX_IOPAD(0x8c8, PULL_DISABLE | MUX_MODE7)	/* lcd_data10.lcd_data10 */
			AM33XX_IOPAD(0x8cc, PULL_DISABLE | MUX_MODE7)	/* lcd_data11.lcd_data11 */
			AM33XX_IOPAD(0x8d0, PULL_DISABLE | MUX_MODE7)	/* lcd_data12.lcd_data12 */
			AM33XX_IOPAD(0x8d4, PULL_DISABLE | MUX_MODE7)	/* lcd_data13.lcd_data13 */
			AM33XX_IOPAD(0x8d8, PULL_DISABLE | MUX_MODE7)	/* lcd_data14.lcd_data14 */
			AM33XX_IOPAD(0x8dc, PULL_DISABLE | MUX_MODE7)	/* lcd_data15.lcd_data15 */
			AM33XX_IOPAD(0x8e0, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_vsync.lcd_vsync */
			AM33XX_IOPAD(0x8e4, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_hsync.lcd_hsync */
			AM33XX_IOPAD(0x8e8, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_pclk.lcd_pclk */
			AM33XX_IOPAD(0x8ec, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* lcd_ac_bias_en.lcd_ac_bias_en */
                >;
        };

	mcasp0_pins: mcasp0_pins {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x92C, PIN_INPUT_PULLDOWN  | MUX_MODE6) /* mii1_txclk.mcasp0_aclkx */
                        AM33XX_IOPAD(0x994, PIN_INPUT_PULLDOWN  | MUX_MODE0) /* mcasp0_fsx.mcasp0_fsx   */
                        AM33XX_IOPAD(0x934, PIN_OUTPUT_PULLDOWN | MUX_MODE6) /* mii1_rxd3.mcasp0_axr0   */
                        AM33XX_IOPAD(0x9A8, PIN_INPUT_PULLDOWN  | MUX_MODE0) /* mcasp0_axr1.mcasp0_axr1 */
                >;
        };

        mcasp0_sleep_pins: mcasp0_sleep_pins {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x92C, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x994, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x934, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x9A8, PIN_INPUT_PULLDOWN | MUX_MODE7)
                >;
        };

	nandflash_pins_default: nandflash_pins_default {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x800, PIN_INPUT_PULLUP | MUX_MODE0)      /* gpmc_ad0.gpmc_ad0 */
                        AM33XX_IOPAD(0x804, PIN_INPUT_PULLUP | MUX_MODE0)      /* gpmc_ad1.gpmc_ad1 */
                        AM33XX_IOPAD(0x808, PIN_INPUT_PULLUP | MUX_MODE0)      /* gpmc_ad2.gpmc_ad2 */
                        AM33XX_IOPAD(0x80c, PIN_INPUT_PULLUP | MUX_MODE0)      /* gpmc_ad3.gpmc_ad3 */
                        AM33XX_IOPAD(0x810, PIN_INPUT_PULLUP | MUX_MODE0)     /* gpmc_ad4.gpmc_ad4 */
                        AM33XX_IOPAD(0x814, PIN_INPUT_PULLUP | MUX_MODE0)     /* gpmc_ad5.gpmc_ad5 */
                        AM33XX_IOPAD(0x818, PIN_INPUT_PULLUP | MUX_MODE0)     /* gpmc_ad6.gpmc_ad6 */
                        AM33XX_IOPAD(0x81c, PIN_INPUT_PULLUP | MUX_MODE0)     /* gpmc_ad7.gpmc_ad7 */
                        AM33XX_IOPAD(0x870, PIN_INPUT_PULLUP | MUX_MODE0)     /* gpmc_wait0.gpmc_wait0 */
                        AM33XX_IOPAD(0x87c, PIN_OUTPUT | MUX_MODE0)           /* gpmc_csn0.gpmc_csn0  */
                        AM33XX_IOPAD(0x890, PIN_OUTPUT | MUX_MODE0)           /* gpmc_advn_ale.gpmc_advn_ale */
                        AM33XX_IOPAD(0x894, PIN_OUTPUT | MUX_MODE0)           /* gpmc_oen_ren.gpmc_oen_ren */
                        AM33XX_IOPAD(0x898, PIN_OUTPUT | MUX_MODE0)           /* gpmc_wen.gpmc_wen */
                        AM33XX_IOPAD(0x89c, PIN_OUTPUT | MUX_MODE0)           /* gpmc_be0n_cle.gpmc_be0n_cle */
                >;
        };

	nandflash_pins_sleep: nandflash_pins_sleep {
                pinctrl-single,pins = <
                        AM33XX_IOPAD(0x800, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x804, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x808, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x80c, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x810, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x814, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x818, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x81c, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x870, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x874, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x87c, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x890, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x894, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x898, PIN_INPUT_PULLDOWN | MUX_MODE7)
                        AM33XX_IOPAD(0x89c, PIN_INPUT_PULLDOWN | MUX_MODE7)
                >;
        };

	spi0_pins: pinmux_spi0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_INPUT_PULLUP | MUX_MODE0 ) /* (A17) spi0_sclk.spi0_sclk */
			AM33XX_IOPAD(0x954, PIN_INPUT_PULLUP | MUX_MODE0 ) /* (B17) spi0_d0.spi0_d0 */
			AM33XX_IOPAD(0x958, PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (B16) spi0_d1.spi0_d1 */
			AM33XX_IOPAD(0x95c, PIN_OUTPUT_PULLUP | MUX_MODE0 ) /* (A16) spi0_cs0.spi0_cs0 */
		>;
	};

	ecap0_pins_default: ecap0_pins_default {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x964, PIN_OUTPUT | MUX_MODE0 ) /* (E18) eCAP0_in_PWM0_out.eCAP0_in_PWM0_out */
		>;
	};

};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

&uart3 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart3_pins>;
        status = "okay";
};

&uart4 {
        pinctrl-names = "default";
        pinctrl-0 = <&uart4_pins>;
        status = "okay";
};

&i2c0 {
        pinctrl-names = "default";
        pinctrl-0 = <&i2c0_pins>;
        status = "okay";
        clock-frequency = <400000>;
	
	  tlv320aic3106: tlv320aic3106@18 {
             	compatible = "ti,tlv320aic3106";
             	reg = <0x18>;
             	ai3x-micbias-vg = <1>;
             	status = "okay";

             	/* Regulators */
             	AVDD-supply  = <&core_audio_supply>;
            	IOVDD-supply = <&core_audio_supply>;
             	DRVDD-supply = <&core_audio_supply>;
             	DVDD-supply  = <&io_audio_supply>;
	  };
	
	  pcf8563: pcf8563@51 {
          	compatible = "nxp,pcf8563";
             	reg = <0x51>;
          };
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&vmmcsd_fixed>;
	bus-width = <4>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_sleep>;
	cd-gpios = <&gpio3 14 GPIO_ACTIVE_HIGH>;
};

&mmc3 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
        vmmc-supply = <&vmmcsd_fixed>;
	bus-width = <4>;
	ti,non-removable;
	dmas = <&edma_xbar 12 0 1
                &edma_xbar 13 0 2>;
        dma-names = "tx", "rx";
};

&tscadc {
        status = "okay";
        tsc {
                ti,wires = <4>;
                ti,x-plate-resistance = <200>;
                ti,coordinate-readouts = <5>;
                ti,wire-config = <0x00 0x11 0x22 0x33>;
        };
        adc {
                ti,adc-channels = <4 5 6 7>;
        };
};

&mcasp0 {
          pinctrl-names = "default", "sleep";
          pinctrl-0 = <&mcasp0_pins>;
          pinctrl-1 = <&mcasp0_sleep_pins>;

          status = "okay";

          op-mode = <0>;          /* MCASP_IIS_MODE */
          tdm-slots = <2>;
          /* 16 serializer */
          serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
                 1 2 0 0
          >;
          tx-num-evt = <32>;
          rx-num-evt = <32>;
};

&mac {
	slaves = <1>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <0>;
	phy-mode = "rmii";
};

&phy_sel {
	rmii-clock-ext;
};

&rtc {
	system-power-controller;
};

&lcdc {
      status = "okay";
};

&sgx {
      status = "okay";
};

&usb {
      status = "okay";
};

&usb_ctrl_mod {
      status = "okay";
};

&usb0_phy {
     status = "okay";
};

&usb1_phy {
     status = "okay";
};

&usb0 {
     status = "okay";
     dr_mode = "host";
};

&usb1 {
     status = "okay";
     dr_mode = "otg";
};

&cppi41dma  {
     status = "okay";
};

/*
 * SPI Flash (1MiB)
 * 0x000000 - 0x01FFFF : SPL (128KiB)
 * 0x020000 - 0x09FFFF : U-Boot (512KiB)
 * 0x0A0000 - 0x0BFFFF : First copy of U-Boot Environment (128KiB)
 * 0x0C0000 - 0x0DFFFF : Second copy of U-Boot Environment (128KiB)
 */
&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	status = "okay";

	flash: s25fl064k@0 {
		 #address-cells = <1>;
		 #size-cells = <1>;
		 compatible = "st,s25fl064k";
		 spi-max-frequency = <25000000>;
		 reg = <0>;


		 partition@0 {
			 label = "u-boot-spl";
			 reg = <0x000000 0x020000>;
		 };


		 partition@1 {
			 label = "u-boot";
			 reg = <0x020000 0x080000>;
		 };

		 partition@2 {
			 label = "env1";
			 reg = <0x0A0000 0x010000>;
		 };

		 partition@3 {
			 label = "env2";
			 reg = <0x0B0000 0x010000>;
		 };

	};
};

&epwmss0 {
	status = "okay";

	ecap0: ecap@48300100 {
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&ecap0_pins_default>;
	};
};
